{
  "name": "place-dev",
  "version": "0.2.0",
  "config": {
    "hc_version": "0.2.2",
    "zits_version": "1.9.0",
    "bin": "bin"
  },
  "private": true,
  "workspaces": [
    "webcomponents",
    "we-applet",
    "webapp"
  ],
  "scripts": {
    "install:submodules" : "bash scripts/install-submodules.sh $npm_package_config_hc_version",
    "install:rust"       : "bash submodules/hc-prebuilt/install-rust.sh",
    "install:hash-zome"  : "bash submodules/hc-prebuilt/install-hash-zome.sh $npm_package_config_bin",
    "install:hc"         : "bash submodules/hc-prebuilt/install-hc-cli.sh $npm_package_config_bin $npm_package_config_hc_version",
    "install:zits"       : "cargo install zits --version $npm_package_config_zits_version",
    "version"            : "$npm_package_config_bin/hc --version & holochain --version & lair-keystore --version & tsc --version",
    "hash-zome"          : "bash submodules/hc-prebuilt/hash-zome.sh $npm_package_config_bin ./target/wasm32-unknown-unknown/release/place_integrity.wasm electron/bin/model_zome_hash.txt",
    "build:zome"         : "CARGO_TARGET_DIR=target cargo build --release --target wasm32-unknown-unknown",
    "build:dna"          : "npm run build:zome && bash scripts/pack-dna.sh $npm_package_config_bin",
    "build:happ"         : "npm run build:dna && $npm_package_config_bin/hc app pack dna/workdir_dashboard -o artifacts/place.happ && cp artifacts/place.happ electron/bin/place.happ && npm run hash-zome",
    "build:devtest"      : "npm run clean:hc & npm run build:happ && bash scripts/ts-bindings.sh && npm run build -w webcomponents",
    "build:webapp"       : "npm run build -w webcomponents && npm run build -w webapp",
    "build:chaperone"    : "npm run build -w webapp-chaperone",
    "build:holo-mainnet" : "npm run build -w webcomponents && npm run build:chaperone && PLACE_CHAPERONE_SERVER_URL='https://devnet-chaperone.holo.host' npm run package -w place-chaperone",

    "test"               : "npm run build:happ && npm run build -w webcomponents && npm t -w tests",

    "new-sandbox:mem"    : "RUST_LOG=warn echo \"pass\" | $npm_package_config_bin/hc s --piped -f=$HC_ADMIN_PORT generate artifacts/place.happ --run=$HC_APP_PORT -a place network mem",
    "new-sandbox:local"  : "RUST_LOG=warn echo \"pass\" | $npm_package_config_bin/hc s --piped -f=$HC_ADMIN_PORT generate artifacts/place.happ --run=$HC_APP_PORT -a place network --bootstrap http://127.0.0.1:$BOOT_PORT webrtc ws://127.0.0.1:$SIGNAL_PORT",
    "new-sandbox:public" : "RUST_LOG=warn echo \"pass\" | $npm_package_config_bin/hc s --piped -f=$HC_ADMIN_PORT generate artifacts/place.happ --run=$HC_APP_PORT -a place network --bootstrap https://bootstrap.holo.host/ webrtc wss://signal.holo.host",

    "start:mem"          : "cross-env HC_APP_PORT=$(port) HC_ADMIN_PORT=$(port) concurrently \"npm run build:watch -w webcomponents\" \"npm run new-sandbox:mem\" \"sleep 5 && npm run start:ui -w webapp\"",
    "start:local"        : "cross-env HC_APP_PORT=$(port) HC_ADMIN_PORT=$(port) concurrently \"npm run _save-ports\" \"npm run build:watch -w webcomponents\" \"npm run new-sandbox:local\" \"sleep 5 && npm run start:ui -w webapp\"",
    "start:public"       : "cross-env HC_APP_PORT=$(port) HC_ADMIN_PORT=$(port) concurrently \"npm run build:watch -w webcomponents\" \"npm run new-sandbox:public\" \"sleep 5 && npm run start:ui -w webapp\"",

    "start:chaperone"    : "cross-env HC_APP_PORT=33735 HC_ADMIN_PORT=$(port) concurrently \"npm run build:watch -w webcomponents\" \"npm run new-sandbox:mem\" \"sleep 5 && npm run start -w webapp-chaperone\"",
    "start:holo-mainnet" : "PLACE_CHAPERONE_SERVER_URL='https://devnet-chaperone.holo.host' npm run start:chaperone",

    "devtest"            : "npm run build:devtest && npm run build -w webapp && npm run start:mem",
    "devtest:we"         : "npm run build:devtest && npm run dist -w webapp && npm run package:webapp && npm run devtest -w we-applet",
    "devtest:electron"   : "npm run build:devtest && npm run dist -w webapp && npm run package:webapp && npm run build -w electron && BUILD_MODE='dev' npm run start -w electron",
    "prodtest"           : "npm run build:devtest && npm run dist -w webapp && npm run start:mem",
    "prodtest:electron"  : "npm run build:devtest && npm run dist -w webapp && npm run start -w electron",

    "package:webapp"     : "rm -rf artifacts/place-webapp-ui.zip && cd webapp/dist && bestzip ../../artifacts/place-webapp-ui.zip * && cd ../.. && $npm_package_config_bin/hc web-app pack webapp/webhapp.workdir -o artifacts/place.webhapp",
    "package:we"         : "rm -rf artifacts/place-we_applet-ui.zip && cd we-applet/dist && rm -f *.map && bestzip ../../artifacts/place-we_applet-ui.zip * && cd ../.. && $npm_package_config_bin/hc web-app pack we-applet/webhapp.workdir -o artifacts/place-we_applet.webhapp",

    "dist:we"            : "npm run package:webapp && npm run package:we",
    "dist:electron"      : "bash submodules/hc-prebuilt/copy-binaries.sh electron/bin && npm run dist:build -w electron",

    "_save-ports"        : "echo $HC_APP_PORT > .hc_app_$INDEX && echo $HC_ADMIN_PORT > .hc_admin_$INDEX",

    "serve:run"          : "hc run-local-services --bootstrap-port $BOOT_PORT --signal-port $SIGNAL_PORT",
    "serve:save"         : "echo SIGNAL_PORT=$SIGNAL_PORT && echo $SIGNAL_PORT > .hc_signalenv && echo $BOOT_PORT > .hc_bootenv && echo BOOT_PORT=$BOOT_PORT",
    "serve"              : "cross-env BOOT_PORT=$(cat .hc_bootenv) SIGNAL_PORT=$(cat .hc_signalenv) npm run serve:run",
    "network2"           : "npm run clean:hc & npm run build:devtest && cross-env BOOT_PORT=$(port) SIGNAL_PORT=$(port) concurrently \"npm run serve:save\" \"npm run serve:run\" \"cross-env INDEX=0 npm run start:local\" \"sleep 1 && cross-env INDEX=1 npm run start:local\"",
    "network3"           : "npm run clean:hc & npm run build:devtest && cross-env BOOT_PORT=$(port) SIGNAL_PORT=$(port) concurrently \"npm run serve:save\" \"npm run serve:run\" \"cross-env INDEX=0 npm run start:local\" \"sleep 1 && cross-env INDEX=1 npm run start:local\" \"sleep 2 && cross-env INDEX=2 npm run start:local\"",
    "network:we"         : "npm run clean:hc & npm run network:local2 -w we-applet",

    "local:sandbox"      : "echo INDEX $INDEX & echo PORTS $BOOT_PORT $SIGNAL_PORT $HC_APP_PORT $HC_ADMIN_PORT & RUST_LOG=warn WASM_LOG=warn echo \"pass\" | $npm_package_config_bin/hc s --piped -f=$HC_ADMIN_PORT run $INDEX",
    "_local"             : "cross-env BOOT_PORT=$(cat .hc_bootenv) SIGNAL_PORT=$(cat .hc_signalenv) HC_APP_PORT=$(cat .hc_app_$INDEX) HC_ADMIN_PORT=$(cat .hc_admin_$INDEX) BUILD_MODE='dev' ADD_PROFILES=1 concurrently \"npm run local:sandbox\" \"sleep 7 && npm run start:ui -w webapp\"",
    "local0"             : "cross-env INDEX=0 npm run _local",
    "local1"             : "cross-env INDEX=1 npm run _local",
    "local2"             : "cross-env INDEX=2 npm run _local",

    "start:launcher"     : "echo pass | hc-launch --piped -n 1 artifacts/place.webhapp network mem",

    "hc-host:gen-agent"  : "sh ./scripts/gen-host-agent.sh",
    "hc-host:run"        : "$npm_package_config_bin/hc sandbox r 0 -p=8888",
    "serve:self-hosted"  : "PLACE_APP_CONTEXT='self-hosted' vue-cli-service serve",
    "serve:holo"         : "PLACE_APP_CONTEXT='holo-host' PLACE_CHAPERONE_SERVER_URL='http://localhost:24274/' vue-cli-service serve",
    "self-hosted"        : "nix-shell --command 'holo-dev-server -p 24274 artifacts/place.happ'",

    "update-version"     : "bash scripts/update-version-number.sh $npm_package_version",

    "dl-test-release"    : "rm -rf release & mkdir -p release & gh release download manual-release -D release -R lightningrodlabs/place",

    "clean"              : "bash scripts/clean.sh",
    "clean:npm"          : "bash scripts/clean-npm.sh",
    "clean:hc"           : "rm -rf .hc* & rm -rf electron/web/*.js",
    "clean:all"          : "npm run clean:agents & npm run clean:npm & npm run clean"



  },
  "devDependencies": {
    "@holochain-playground/cli": "^0.0.8",
    "@joseph184/rollup-plugin-node-builtins": "^2.1.4",
    "@rollup/plugin-commonjs": "^18.0.0",
    "@rollup/plugin-node-resolve": "^13.0.4",
    "@rollup/plugin-sucrase": "^4.0.1",
    "@rollup/plugin-typescript": "^8.2.5",
    "@types/lodash-es": "^4.17.4",
    "@types/ws": "^8.5.3",
    "bestzip": "^2.2.0",
    "concurrently": "^6.2.1",
    "concurrently-repeat": "^0.0.1",
    "cross-env": "^7.0.3",
    "json-parse-better-errors": "^1.0.2",
    "lit-analyzer": "^1.2.1",
    "new-port-cli": "^1.0.0",
    "rollup": "^2.56.3",
    "rollup-plugin-copy": "^3.4.0",
    "rollup-plugin-node-globals": "^1.4.0",
    "rollup-plugin-peer-deps-external": "^2.2.4",
    "rollup-plugin-postcss": "^4.0.1",
    "rollup-plugin-postcss-lit": "^1.1.1",
    "rollup-plugin-serve": "^1.1.0",
    "rollup-plugin-terser": "^7.0.2",
    "run-singleton-cli": "^0.0.5",
    "tslib": "^2.4.0",
    "typescript": "^4.9.5",
    "watch-cli": "^0.2.3"
  },
  "dependencies": {
    "@ddd-qc/cell-proxy": "0.19.4",
    "@ddd-qc/lit-happ": "0.19.4",
    "@holochain-open-dev/core-types": "0.6.3",
    "@holochain/client": "=0.16.1",
    "@lit-labs/context": "0.2.0",
    "@shoelace-style/shoelace": "2.4.0",
    "lit": "2.6.0"
  },
  "engines": {
    "npm": ">=7.0.0"
  }
}

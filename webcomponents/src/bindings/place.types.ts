/* This file is generated by zits. Do not edit manually */

import {
/** types.ts */
HoloHash,
AgentPubKey,
DnaHash,
WasmHash,
EntryHash,
ActionHash,
AnyDhtHash,
KitsuneAgent,
KitsuneSpace,
HoloHashB64,
AgentPubKeyB64,
DnaHashB64,
WasmHashB64,
EntryHashB64,
ActionHashB64,
AnyDhtHashB64,
InstalledAppId,
Signature,
CellId,
DnaProperties,
RoleName,
Timestamp,
Duration,
HoloHashed,
NetworkInfo,
FetchQueueInfo,
/** hdk/action.ts */
SignedActionHashed,
ActionHashed,
ActionType,
Action,
NewEntryAction,
Dna,
AgentValidationPkg,
InitZomesComplete,
CreateLink,
DeleteLink,
OpenChain,
CloseChain,
Update,
Delete,
Create,
/** hdk/capabilities.ts */
CapSecret,
CapClaim,
ZomeCallCapGrant,
CapAccess,
CapGrant,
GrantedFunctionsType,
///** hdk/countersigning.ts */
//CounterSigningSessionData,
//PreflightRequest,
//CounterSigningSessionTimes,
//ActionBase,
//CounterSigningAgents,
//PreflightBytes,
//Role,
//CountersigningAgentState,
/** hdk/dht-ops.ts */
DhtOpType,
DhtOp,
getDhtOpType,
getDhtOpAction,
getDhtOpEntry,
getDhtOpSignature,
/** hdk/entry.ts */
EntryVisibility,
AppEntryDef,
EntryType,
EntryContent,
Entry,
/** hdk/record.ts */
Record as HcRecord,
RecordEntry as HcRecordEntry,
/** api/admin/types.ts */
InstalledAppInfoStatus,
StemCell,
ProvisionedCell,
ClonedCell,
CellType,
CellInfo,
AppInfo,
MembraneProof,
FunctionName,
ZomeName,
ZomeDefinition,
IntegrityZome,
CoordinatorZome,
DnaDefinition,
ResourceBytes,
ResourceMap,
CellProvisioningStrategy,
CellProvisioning,
DnaVersionSpec,
DnaVersionFlexible,
AppRoleDnaManifest,
AppRoleManifest,
AppManifest,
AppBundle,
AppBundleSource,
NetworkSeed,
ZomeLocation,
   } from '@holochain/client';

import {
/** Common */
DhtOpHashB64,
DhtOpHash,
/** DnaFile */
DnaFile,
DnaDef,
Zomes,
WasmCode,
/** entry-details */
EntryDetails,
RecordDetails,
Details,
DetailsType,
EntryDhtStatus,
/** Validation */
ValidationStatus,
ValidationReceipt,
   } from '@holochain-open-dev/core-types';

export type DoublePixel = number;

export interface DestructuredPlacement {
  x: number
  y: number
  colorIndex: number
}

/** A Public Entry representing a pixel placement by an agent */
export interface Placement {
  pixel: number
}

/** Dna properties */
export interface PlaceProperties {
  startTime: number
  canvasSize: number
  bucketSizeSec: number
  pixelsPerBucket: number
  snapshotIntervalInBuckets: number
}

/** A Public Entry representing the whole canvas for a specific time bucket */
export interface Snapshot {
  imageData: Uint8Array
  timeBucketIndex: number
}

export enum PlaceEntryType {
	Placement = 'Placement',
	Snapshot = 'Snapshot',
}
export type PlaceEntryVariantPlacement = {Placement: Placement}
export type PlaceEntryVariantSnapshot = {Snapshot: Snapshot}
export type PlaceEntry = 
 | PlaceEntryVariantPlacement | PlaceEntryVariantSnapshot;

/**  */
export const MAX_BUCKET_SIZE_SEC = 24 * 60 * 60;

export const MIN_BUCKET_SIZE_SEC = 60;

export interface GetAuthorRankInput {
  author: AgentPubKeyB64
  bucketIndex: number
}

export interface GetPlacementAuthorInput {
  placement: number
  bucketIndex: number
}

/** DEBUGGING API */
export interface PlaceAtInput {
  placement: DestructuredPlacement
  bucketIndex: number
}

export interface BucketRangeInput {
  latestKnownBucket: number
  nowBucket: number
}

/** Listing all Holochain Path used in this DNA */
export const Days = "days";

name: build-electron

on:
  workflow_call:

env:
  USE_HARD_LINKS: false

jobs:
  # Build the dna & webhapps
  call-build-webhapps:
    uses: ./.github/workflows/build-webhapps.yml

  # upload the app package for each target os
  build-electron:
    needs: call-build-webhapps
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - macos-11
          - windows-latest
    runs-on: ${{ matrix.os }}
    steps:
      # Checkout repo
      - uses: actions/checkout@v3
      # Set NPM shell (windows-only)
      - name: Set NPM shell (windows-only)
        if: ${{ runner.os == 'Windows' }}
        shell: bash
        run: |
          npm config set script-shell "C:\\Program Files\\git\\bin\\bash.exe"
      # Download previously uploaded artifacts
      - uses: actions/download-artifact@master
        with:
          name: all-happ-artifact
          path: artifacts
      # Display artifacts folder
      - name: Display artifacts folder
        run: ls
        working-directory: artifacts
      # Dispatch artifacts
      - name: Dispatch artifacts
        run: |
          cp artifacts/place.happ electron/bin
          cp artifacts/model_zome_hash.txt electron/bin
      # Install npm dependencies
      - name: Install npm dependencies
        run: |
          npm install
      # build webapp
      - name: build webapp
        shell: bash
        run: |
          npm run build:webapp
      # build electron
      - name: build electron
        shell: bash
        run: |
          npm run build -w electron
      # Dist electron
      - name: Dist electron
        shell: bash
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          npm run dist:build -w electron
#      # Build tar.gz
#      - name: Build tar.gz
#        if: ${{ runner.os == 'Linux' }}
#        continue-on-error: true
#        shell: bash
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        run: |
#          npm run dist-linux
#          gh release upload "manual-release" "electron/out/place-$PLACE_VERSION.tar.gz" --clobber
      # Check electron output folder
      - name: Check electron output folder
        continue-on-error: true
        run: ls -R
        working-directory: electron/out-builder
      # Build chaperone app
#      - name: Build chaperone app (ubuntu only)
#        continue-on-error: true
#        if: ${{ runner.os == 'Linux' }}
#        run: |
#          npm run build:chaperone-mainnet
#      - name: list releases
#        continue-on-error: true
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        run: |
#          gh release list
      # Move binary for each platform
      - name: Move binary
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cp electron/out-builder/Place* ./artifacts
      # List uploaded files
      - name: List artifacts folder
        run: ls -R
        working-directory: artifacts
      # "upload" artifacts
      - uses: actions/upload-artifact@master
        with:
          name: all-happ-artifact
          path: artifacts
